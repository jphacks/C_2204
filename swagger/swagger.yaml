openapi: 3.0.3
info:
  title: fake memory
  description: fake memory api
  version: 1.0.0
paths:
  /users/check:
    get:
      tags:
        - "user"
      summary: ユーザ確認
      description: 入力中のユーザがすでに使用されているか確認
      parameters:
        - name: "user-id"
          in: "query"
          description: "作成中のユーザID"
          required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  exist:
                    type: boolean
                    description: すでに存在している場合
                    example: true

  /users/signup:
    post:
      tags:
        - "user"
      summary: 新規ユーザの登録
      description: 新規にユーザを作成する
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ユニークなユーザーID
                  example: jphacks
                user_name:
                  type: string
                  description: 表示名
                  example: jphacks!
                password:
                  type: string
                  description: ハッシュ化されたパスワード
                  example: ハッシュ化されたパスワード
      responses:
        "201":
          description: successful operation
        "500":
          description: failure operation

  /users/signin:
    post:
      tags:
        - "user"
      summary: ログイン
      description: ログイン
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ユニークなユーザーID
                  example: jphacks
                password:
                  type: string
                  description: ハッシュ化されたパスワード
                  example: ハッシュ化されたパスワード
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized

  /users/signout:
    get:
      tags:
        - "user"
      summary: ログアウト
      description: ログアウト
      responses:
        "200":
          description: successful operation

  /photos/presigned-url:
    get:
      tags:
        - photo
      summary: crop用のアップロード先
      description: "presigned urlとkeyを返す 参考: https://docs.aws.amazon.com/ja_jp/AmazonS3/latest/userguide/ShareObjectPreSignedURL.html"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PresignedURL"
  /photos/persons:
    get:
      tags:
        - photo
      summary: 切り抜かれた人画像一覧
      description: 人の画像URLを返す
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CropedPersonURL"
  /photos/crop:
    post:
      tags:
        - photo
      summary: 画像から人を切り抜いてURLを返す
      description: keyを指定するとその画像を切り抜く
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: s3オブジェクトのkey
                  example: key-name
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CropedPersonURL"

  /posts/presigned-url:
    get:
      tags:
        - post
      summary: アプリで作成した画像の保存先
      description: "presigned urlとkeyを返す 参考: https://docs.aws.amazon.com/ja_jp/AmazonS3/latest/userguide/ShareObjectPreSignedURL.html"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PresignedURL"
  /posts:
    get:
      tags:
        - post
      summary: 作成された画像一覧
      description: 捏造思い出の一覧を返す
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Photo"
    post:
      tags:
        - post
      summary: 投稿作成
      description: hoge
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: s3オブジェクトのkey
                  example: key-name
                body:
                  type: string
                  description: 投稿内容
                  example: 友達と夢の国に行ってきた
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Photo"

  /posts/{post_id}/like:
    post:
      tags:
        - post
      summary: いいねを押す
      description: いいねを押す
      parameters:
        - name: post_id
          in: path
          description: "操作する投稿のID"
          required: true
      responses:
        "200":
          description: Successful operation
    delete:
      tags:
        - post
      summary: いいねを取り消す
      description: いいねを取り消す
      parameters:
        - name: post_id
          in: path
          description: "操作する投稿のID"
          required: true
      responses:
        "200":
          description: Successful operation

components:
  schemas:
    CropedPersonURL:
      type: object
      description: s3上で画像を識別するkeyと画像をGETするためのurl
      properties:
        key:
          type: string
          example: key-name
        url:
          type: string
          format: url
          example: https://my-bucket.s3-ap-northeast-1.amazonaws.com/key-name?hoge=fuga
    PresignedURL:
      type: object
      description: s3に画像をPUTするために必要なURLとkey
      properties:
        key:
          type: string
          example: key-name
        url:
          type: string
          format: url
          example: https://my-bucket.s3-ap-northeast-1.amazonaws.com/key-name?hoge=fuga
    Photo:
      type: object
      description: 捏造された思い出
      properties:
        photo:
          $ref: "#/components/schemas/CropedPersonURL"
        user:
          type: object
          properties:
            id:
              example: user_id
            name:
              example: user_name
        body:
          type: string
          description: つぶやきの内容
          example: 友達と夢の国行ってきた
        created_at:
          type: string
          format: date-time
        likes:
          type: integer
          description: いいね数 とりあえず0
          example: 0
        already_like:
          type: boolean
          description: 自身がいいねをおしているか
          example: false
