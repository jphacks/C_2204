services:
  db:
    image: mysql:5.7
    container_name: jphacks_db
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --general-log=true --general-log-file=/var/log/mysql/general.log
    environment:
      MYSQL_DATABASE: jphacks
      MYSQL_USER: jphacks
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db-data:/var/lib/mysql:delegated
    ports:
      - "3306:3306"
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "127.0.0.1",
          "-uroot",
          "-proot"
        ]
      interval: 1s
      timeout: 5s
      retries: 20

  client:
    container_name: jphacks_client
    build:
      context: .
      dockerfile: ./docker/client/Dockerfile
      args:
        target: dev
    volumes:
      - ./client:/app
    ports:
      - 3000

  web:
    container_name: jphacks_web
    build:
      context: .
      dockerfile: ./docker/server/Dockerfile
      args:
        target: dev
    volumes:
      - ./server:/app
    ports:
      - 4000
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:4000 || exit 1
      interval: 1s
      timeout: 5s
      retries: 20

  nginx:
    container_name: jphacks_nginx
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    environment:
      SERVER_HOST: web
      CLIENT_HOST: client
    ports:
      - "8080:80"
    depends_on:
      server:
        condition: service_started
      client:
        condition: service_started

  minio:
    container_name: jphacks_minio
    image: minio/minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio-data:/data:delegated
    command: ['server', '--console-address', ':9001', '--compat', '/data']
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 1s
      retries: 10

  createbuckets: # docker compose upするとexit with code 0で終了しますが、バケット作成は成功しているので大丈夫です
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb myminio/jphacks;
      /usr/bin/mc policy set public myminio/jphacks;
      exit 0;
      "

volumes:
  db-data:
    name: jphacks-db-data
    external: true
  minio-data:
    name: jphacks-minio-data
    external: true
